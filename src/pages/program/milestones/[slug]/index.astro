---
/**
 * @description milestone details page
 * @param slug
 * @path /program/milestone/[slug]
 * @author amit chanchal
 * @updated Aug 28, 2025
 */

import DashLayout from "../../../../layouts/DashLayout.astro";
import { render, getEntry, type CollectionEntry } from "astro:content";
import MDContainer from "../../../../components/content/MDContainer.astro";
import ContentInitializer from "../../../../components/program/progress/ContentInitializer";
import ContentNavigationButtons from "../../../../components/program/progress/ContentNavigationButtons";
import ContentProgressStatus from "../../../../components/program/progress/ContentProgressStatus";
import ContentAction from "src/components/user/actions/ContentActions";

import { hasAccess, accessProfiles } from "../../../../lib/rbac";
const { userRoles, session } = Astro.locals;
const pathname = Astro.url.pathname;

// CHECK AUTHENTICATION AND ACCESS

const isAuthenticated: boolean = session !== null;

const hasPageAccess: boolean = hasAccess(
  userRoles,
  accessProfiles.programStart,
);

// redirect if doesnt have access
if (!isAuthenticated || !hasPageAccess) {
  return Astro.redirect("/program");
}

// Fetch Content
const { slug } = Astro.params;
if (slug === undefined) {
  return Astro.redirect("/404");
}

const milestone = await getEntry("milestones", slug);

if (milestone === undefined) {
  return Astro.redirect("/404");
}

const { Content } = await render(milestone);
// breadcrumb items

const breadcrumbs = [
  { name: "Home", url: "/" },
  { name: "Program", url: "/program" },
  { name: "Milestone", url: "/program/milestones" },
  {
    name: `Milestone ${milestone.data.sequence}`,
    url: `/program/milestones/${milestone.slug}`,
  },
];
---

<DashLayout
  title={`milestone - ${milestone.data.title} | urge`}
  description={milestone.data?.description || milestone.data.title}
  breadcrumbItems={breadcrumbs}
>
  <ContentInitializer
    contentMetaId={milestone.data.contentMetaId}
    client:load
  />

  <div class="w-full flex justify-between items-center mb-8">
    <div
      class="p-2 h-full bg-white flex gap-1 items-center shadow-md rounded-md"
    >
      <ContentProgressStatus
        contentId={milestone.data.contentMetaId}
        client:load
      />
    </div>
    <div class="flex gap-2">
      {
        session != null && session.user.id ? (
          <ContentAction
            contentType={milestone.collection}
            referenceTable={"content_meta"}
            referenceUrl={pathname}
            relatedContentId={milestone.data.contentMetaId}
            userId={session?.user.id}
            client:load
          />
        ) : null
      }
    </div>
  </div>

  <h1 class="mb-8">{milestone.data.title}</h1>

  <MDContainer>
    <Content />
  </MDContainer>
  <ContentNavigationButtons
    contentMetaId={milestone.data.contentMetaId}
    contentType={milestone.collection}
    nextContentId={milestone.data.next?.id}
    nextContentType={milestone.data.next?.type}
    previousContentId={milestone.data.previous?.id}
    previousContentType={milestone.data.previous?.type}
    client:load
  />
</DashLayout>
